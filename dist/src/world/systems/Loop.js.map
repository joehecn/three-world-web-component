{"version":3,"file":"Loop.js","sourceRoot":"","sources":["../../../../src/world/systems/Loop.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,KAAK,EAAE,MAAM,OAAO,CAAC;AAI9B,MAAM,KAAK,GAAG,IAAI,KAAK,EAAE,CAAC;AAE1B,MAAM,OAAO,IAAI;IASf,YACE,KAAkB,EAClB,MAA+B,EAC/B,QAA6B;QALvB,gBAAW,GAAQ,EAAE,CAAC;QAO5B,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;QACpB,IAAI,CAAC,OAAO,GAAG,MAAM,CAAC;QACtB,IAAI,CAAC,SAAS,GAAG,QAAQ,CAAC;IAC5B,CAAC;IAED,KAAK;QACH,IAAI,CAAC,SAAS,CAAC,gBAAgB,CAAC,GAAG,EAAE;YACnC,uDAAuD;YACvD,IAAI,CAAC,IAAI,EAAE,CAAC;YAEZ,iBAAiB;YACjB,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,OAAO,CAAC,CAAC;QACnD,CAAC,CAAC,CAAC;IACL,CAAC;IAED,IAAI;QACF,IAAI,CAAC,SAAS,CAAC,gBAAgB,CAAC,IAAI,CAAC,CAAC;IACxC,CAAC;IAED,aAAa,CAAC,GAAQ;QACpB,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;IAC7B,CAAC;IAED,IAAI;QACF,kDAAkD;QAClD,MAAM,KAAK,GAAG,KAAK,CAAC,QAAQ,EAAE,CAAC;QAE/B,KAAK,MAAM,GAAG,IAAI,IAAI,CAAC,WAAW,EAAE;YAClC,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;SACjB;IACH,CAAC;CACF","sourcesContent":["import { Clock } from 'three';\n\nimport * as THREE from 'three';\n\nconst clock = new Clock();\n\nexport class Loop {\n  private _scene: THREE.Scene;\n\n  private _camera: THREE.PerspectiveCamera;\n\n  private _renderer: THREE.WebGLRenderer;\n\n  private _updatables: any = [];\n\n  constructor(\n    scene: THREE.Scene,\n    camera: THREE.PerspectiveCamera,\n    renderer: THREE.WebGLRenderer\n  ) {\n    this._scene = scene;\n    this._camera = camera;\n    this._renderer = renderer;\n  }\n\n  start() {\n    this._renderer.setAnimationLoop(() => {\n      // Tell every animated object to tick forward one frame\n      this.tick();\n\n      // Render a frame\n      this._renderer.render(this._scene, this._camera);\n    });\n  }\n\n  stop() {\n    this._renderer.setAnimationLoop(null);\n  }\n\n  pushUpdatable(obj: any) {\n    this._updatables.push(obj);\n  }\n\n  tick() {\n    // only call the getDelta function once per frame!\n    const delta = clock.getDelta();\n\n    for (const obj of this._updatables) {\n      obj.tick(delta);\n    }\n  }\n}\n"]}